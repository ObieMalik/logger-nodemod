{"version":3,"file":"logger.js","sourceRoot":"","sources":["../src/logger.ts"],"names":[],"mappings":";;;AAAA,mCAAkC;AAElC,MAAM,MAAM,GAAG;IACd,KAAK,EAAE,CAAC;IACR,IAAI,EAAE,CAAC;IACP,IAAI,EAAE,CAAC;IACP,IAAI,EAAE,CAAC;IACP,KAAK,EAAE,CAAC;CACR,CAAA;AAED,MAAM,KAAK,GAAG,GAAG,EAAE;IAClB,MAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,IAAI,aAAa,CAAA;IAEjD,IAAK,GAAG,KAAK,aAAa;QACzB,OAAO,OAAO,CAAA;IAEf,IAAK,GAAG,KAAK,YAAY;QACxB,OAAO,MAAM,CAAA;IAEd,OAAO,MAAM,CAAA;AACd,CAAC,CAAA;AAED,MAAM,MAAM,GAAG;IACd,KAAK,EAAE,KAAK;IACZ,IAAI,EAAE,QAAQ;IACd,IAAI,EAAE,OAAO;IACb,IAAI,EAAE,SAAS;IACf,KAAK,EAAE,OAAO;CACd,CAAA;AAED,OAAO,CAAC,SAAS,CAAE,MAAM,CAAE,CAAA;AAE3B,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,OAAO,CACpC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAE,EAAE,MAAM,EAAE,wBAAwB,EAAE,CAAE,EAChE,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAE,EAAE,GAAG,EAAE,IAAI,EAAE,CAAE,EACxC,OAAO,CAAC,MAAM,CAAC,MAAM,CACpB,CAAE,IAAI,EAAG,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,OAAO,EAAE,CAC9D,CACD,CAAA;AAED,MAAM,UAAU,GAAG;IAClB,IAAI,OAAO,CAAC,UAAU,CAAC,OAAO,EAAE;IAChC,IAAI,OAAO,CAAC,UAAU,CAAC,IAAI,CAAE;QAC5B,QAAQ,EAAE,gBAAgB;QAC1B,KAAK,EAAE,MAAM;KACb,CAAE;IACH,IAAI,OAAO,CAAC,UAAU,CAAC,IAAI,CAAE;QAC5B,QAAQ,EAAE,cAAc;QACxB,KAAK,EAAE,OAAO;KACd,CAAE;CACH,CAAA;AAED,MAAM,MAAM,GAAG,OAAO,CAAC,YAAY,CAAE;IACpC,KAAK,EAAE,KAAK,EAAE;IACd,MAAM;IACN,MAAM;IACN,UAAU;CACV,CAAE,CAAA;AAEM,wBAAM","sourcesContent":["import * as winston from 'winston'\n\nconst levels = {\n\terror: 0,\n\twarn: 1,\n\tinfo: 2,\n\thttp: 3,\n\tdebug: 4,\n}\n\nconst level = () => {\n\tconst env = process.env.NODE_ENV || 'development'\n\n\tif ( env === 'development' )\n\t\treturn 'debug'\n\n\tif ( env === 'production' )\n\t\treturn 'warn'\n\n\treturn 'info'\n}\n\nconst colors = {\n\terror: 'red',\n\twarn: 'yellow',\n\tinfo: 'green',\n\thttp: 'magenta',\n\tdebug: 'white',\n}\n\nwinston.addColors( colors )\n\nconst format = winston.format.combine(\n\twinston.format.timestamp( { format: 'YYYY-MM-DD HH:mm:ss:ms' } ),\n\twinston.format.colorize( { all: true } ),\n\twinston.format.printf(\n\t\t( info ) => `${info.timestamp} ${info.level}: ${info.message}`,\n\t),\n)\n\nconst transports = [\n\tnew winston.transports.Console(),\n\tnew winston.transports.File( {\n\t\tfilename: 'logs/error.log',\n\t\tlevel: 'warn',\n\t} ),\n\tnew winston.transports.File( {\n\t\tfilename: 'logs/all.log',\n\t\tlevel: 'debug'\n\t} )\n]\n\nconst logger = winston.createLogger( {\n\tlevel: level(),\n\tlevels,\n\tformat,\n\ttransports,\n} )\n\nexport { logger }"]}