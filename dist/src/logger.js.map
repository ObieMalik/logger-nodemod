{"version":3,"file":"logger.js","sourceRoot":"","sources":["../../src/logger.ts"],"names":[],"mappings":";;;AAAA,mCAAkC;AAElC,MAAM,MAAM,GAAG;IACX,KAAK,EAAE,CAAC;IACR,IAAI,EAAE,CAAC;IACP,IAAI,EAAE,CAAC;IACP,IAAI,EAAE,CAAC;IACP,KAAK,EAAE,CAAC;CACX,CAAA;AAED,MAAM,KAAK,GAAG,GAAG,EAAE;IACf,MAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,IAAI,aAAa,CAAA;IAEjD,IAAK,GAAG,KAAK,aAAa,EAAG;QACzB,OAAO,OAAO,CAAA;KACjB;IAED,IAAK,GAAG,KAAK,YAAY,EAAG;QACxB,OAAO,MAAM,CAAA;KAChB;IAED,OAAO,MAAM,CAAA;AACjB,CAAC,CAAA;AAED,MAAM,MAAM,GAAG;IACX,KAAK,EAAE,KAAK;IACZ,IAAI,EAAE,QAAQ;IACd,IAAI,EAAE,OAAO;IACb,IAAI,EAAE,SAAS;IACf,KAAK,EAAE,OAAO;CACjB,CAAA;AAED,OAAO,CAAC,SAAS,CAAE,MAAM,CAAE,CAAA;AAE3B,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,OAAO,CACjC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAE,EAAE,MAAM,EAAE,wBAAwB,EAAE,CAAE,EAChE,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAE,EAAE,GAAG,EAAE,IAAI,EAAE,CAAE,EACxC,OAAO,CAAC,MAAM,CAAC,MAAM,CACjB,CAAE,IAAI,EAAG,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,OAAO,EAAE,CACjE,CACJ,CAAA;AAED,MAAM,UAAU,GAAG;IACf,IAAI,OAAO,CAAC,UAAU,CAAC,OAAO,EAAE;IAChC,IAAI,OAAO,CAAC,UAAU,CAAC,IAAI,CAAE;QACzB,QAAQ,EAAE,gBAAgB;QAC1B,KAAK,EAAE,MAAM;KAChB,CAAE;IACH,IAAI,OAAO,CAAC,UAAU,CAAC,IAAI,CAAE;QACzB,QAAQ,EAAE,cAAc;QACxB,KAAK,EAAE,OAAO;KACjB,CAAE;CACN,CAAA;AAED,MAAM,MAAM,GAAG,OAAO,CAAC,YAAY,CAAE;IACjC,KAAK,EAAE,KAAK,EAAE;IACd,MAAM;IACN,MAAM;IACN,UAAU;CACb,CAAE,CAAA;AAEM,wBAAM","sourcesContent":["import * as winston from 'winston'\n\nconst levels = {\n    error: 0,\n    warn: 1,\n    info: 2,\n    http: 3,\n    debug: 4\n}\n\nconst level = () => {\n    const env = process.env.NODE_ENV || 'development'\n\n    if ( env === 'development' ) {\n        return 'debug'\n    }\n\n    if ( env === 'production' ) {\n        return 'warn'\n    }\n\n    return 'info'\n}\n\nconst colors = {\n    error: 'red',\n    warn: 'yellow',\n    info: 'green',\n    http: 'magenta',\n    debug: 'white'\n}\n\nwinston.addColors( colors )\n\nconst format = winston.format.combine(\n    winston.format.timestamp( { format: 'YYYY-MM-DD HH:mm:ss:ms' } ),\n    winston.format.colorize( { all: true } ),\n    winston.format.printf(\n        ( info ) => `${info.timestamp} ${info.level}: ${info.message}`\n    )\n)\n\nconst transports = [\n    new winston.transports.Console(),\n    new winston.transports.File( {\n        filename: 'logs/error.log',\n        level: 'warn'\n    } ),\n    new winston.transports.File( {\n        filename: 'logs/all.log',\n        level: 'debug'\n    } )\n]\n\nconst logger = winston.createLogger( {\n    level: level(),\n    levels,\n    format,\n    transports\n} )\n\nexport { logger }\n"]}