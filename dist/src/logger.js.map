{"version":3,"file":"logger.js","sourceRoot":"","sources":["../../src/logger.ts"],"names":[],"mappings":";;;AAAA,mCAAkC;AAElC,mDAAqD;AAKrD,MAAa,MAAM;IAOf,YACY,UAAiC;QACrC,KAAK,EAAE,mCAAmB,CAAC,KAAK;QAChC,MAAM,EAAE,mCAAmB,CAAC,MAAM;QAClC,MAAM,EAAE,mCAAmB,CAAC,MAAM;QAClC,UAAU,EAAE,mCAAmB,CAAC,UAAU;KAC7C;QALO,YAAO,GAAP,OAAO,CAKd;IAGL,CAAC;IAKD,IAAW,QAAQ;QACf,IAAI,CAAC,MAAM,CAAC,SAAS;YACjB,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,EAAE,CAAA;QAC5C,OAAO,MAAM,CAAC,SAAS,CAAA;IAC3B,CAAC;IAMM,cAAc;QACjB,OAAO,CAAC,SAAS,CAAC,mCAAmB,CAAC,MAAM,CAAC,CAAA;QAC7C,OAAO,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;IAC7C,CAAC;CACJ;AAnCD,wBAmCC","sourcesContent":["import * as Winston from 'winston'\n\nimport { LoggerConfiguration } from './logger.config'\n\n/**\n * Logger\n */\nexport class Logger {\n    private static _instance: Winston.Logger\n\n    /**\n     * Build logger Configuration\n     * @param {Winston.LoggerOptions} options Winston logger options\n     */\n    constructor(\n        private options: Winston.LoggerOptions = {\n            level: LoggerConfiguration.level,\n            levels: LoggerConfiguration.levels,\n            format: LoggerConfiguration.format,\n            transports: LoggerConfiguration.transports\n        }\n    ) {\n\n    }\n\n    /**\n     * Get instance of winston logger\n     */\n    public get instance(): Winston.Logger {\n        if (!Logger._instance)\n            Logger._instance = this.createInstance()\n        return Logger._instance\n    }\n\n    /**\n     * Create a new instance of winston logger\n     * @return {Winston.Logger} Instance\n     */\n    public createInstance(): Winston.Logger {\n        Winston.addColors(LoggerConfiguration.colors)\n        return Winston.createLogger(this.options)\n    }\n}"]}