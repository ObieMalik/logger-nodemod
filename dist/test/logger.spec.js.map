{"version":3,"file":"logger.spec.js","sourceRoot":"","sources":["../../test/logger.spec.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,yCAAsC;AACtC,yBAAwB;AAExB,SAAS,CAAE,GAAS,EAAE;IAClB,IAAI;QACA,MAAM,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAE,cAAc,EAAE,EAAE,EAAE,OAAO,CAAE,CAAA;QAC1D,MAAM,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAE,gBAAgB,EAAE,EAAE,EAAE,OAAO,CAAE,CAAA;KAC/D;IAAC,OAAQ,GAAG,EAAG;QACZ,OAAO,CAAC,KAAK,CAAE,GAAG,CAAE,CAAA;KACvB;AACL,CAAC,CAAA,CAAE,CAAA;AAEH,QAAQ,CAAE,aAAa,EAAE,GAAG,EAAE;IAC1B,cAAM,CAAC,IAAI,CAAE,gDAAgD,CAAE,CAAA;IAE/D,EAAE,CAAE,8CAA8C,EAAE,GAAS,EAAE;QAC3D,MAAM,IAAI,GAAG,MAAM,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAE,cAAc,EAAE,MAAM,CAAE,CAAA;QAEjE,MAAM,CAAE,IAAI,CAAE,CAAC,OAAO,CAAE,MAAM,CAAC,gBAAgB,CAC3C,gDAAgD,CACnD,CAAE,CAAA;IACP,CAAC,CAAA,CAAE,CAAA;IAEH,EAAE,CAAE,oDAAoD,EAAE,GAAS,EAAE;QACjE,MAAM,IAAI,GAAG,MAAM,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAE,gBAAgB,EAAE,MAAM,CAAE,CAAA;QAEnE,MAAM,CAAE,IAAI,CAAE,CAAC,OAAO,CAAE,MAAM,CAAC,GAAG,CAAC,gBAAgB,CAC/C,gDAAgD,CACnD,CAAE,CAAA;IACP,CAAC,CAAA,CAAE,CAAA;AACP,CAAC,CAAE,CAAA","sourcesContent":["import { logger } from '../dist/index'\nimport * as fs from 'fs'\n\nbeforeAll( async () => {\n    try {\n        await fs.promises.writeFile( 'logs/all.log', '', 'utf-8' )\n        await fs.promises.writeFile( 'logs/error.log', '', 'utf-8' )\n    } catch ( err ) {\n        console.error( err )\n    }\n} )\n\ndescribe( 'logger.info', () => {\n    logger.info( 'Test run log information using winston logger.' )\n\n    it( 'should be able to log info to \"all.log\" file', async () => {\n        const data = await fs.promises.readFile( 'logs/all.log', 'utf8' )\n\n        expect( data ).toEqual( expect.stringContaining(\n            'Test run log information using winston logger.'\n        ) )\n    } )\n\n    it( 'should NOT be able to log info to \"error.log\" file', async () => {\n        const data = await fs.promises.readFile( 'logs/error.log', 'utf8' )\n\n        expect( data ).toEqual( expect.not.stringContaining(\n            'Test run log information using winston logger.'\n        ) )\n    } )\n} )\n"]}